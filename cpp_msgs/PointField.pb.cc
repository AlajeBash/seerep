// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PointField.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PointField.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ag {
namespace ros {

namespace {

const ::google::protobuf::Descriptor* PointField_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PointField_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PointField_Datatype_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_PointField_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PointField_2eproto() {
  protobuf_AddDesc_PointField_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PointField.proto");
  GOOGLE_CHECK(file != NULL);
  PointField_descriptor_ = file->message_type(0);
  static const int PointField_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointField, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointField, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointField, datatype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointField, count_),
  };
  PointField_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PointField_descriptor_,
      PointField::default_instance_,
      PointField_offsets_,
      -1,
      -1,
      -1,
      sizeof(PointField),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointField, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PointField, _is_default_instance_));
  PointField_Datatype_descriptor_ = PointField_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PointField_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PointField_descriptor_, &PointField::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PointField_2eproto() {
  delete PointField::default_instance_;
  delete PointField_reflection_;
}

void protobuf_AddDesc_PointField_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_PointField_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020PointField.proto\022\006ag.ros\"\334\001\n\nPointFiel"
    "d\022\014\n\004name\030\001 \001(\t\022\016\n\006offset\030\002 \001(\r\022-\n\010datat"
    "ype\030\003 \001(\0162\033.ag.ros.PointField.Datatype\022\r"
    "\n\005count\030\004 \001(\r\"r\n\010Datatype\022\t\n\005UNSET\020\000\022\010\n\004"
    "INT8\020\001\022\t\n\005UINT8\020\002\022\t\n\005INT16\020\003\022\n\n\006UINT16\020\004"
    "\022\t\n\005INT32\020\005\022\n\n\006UINT32\020\006\022\013\n\007FLOAT32\020\007\022\013\n\007"
    "FLOAT64\020\010b\006proto3", 257);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PointField.proto", &protobuf_RegisterTypes);
  PointField::default_instance_ = new PointField();
  PointField::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PointField_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PointField_2eproto {
  StaticDescriptorInitializer_PointField_2eproto() {
    protobuf_AddDesc_PointField_2eproto();
  }
} static_descriptor_initializer_PointField_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* PointField_Datatype_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PointField_Datatype_descriptor_;
}
bool PointField_Datatype_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PointField_Datatype PointField::UNSET;
const PointField_Datatype PointField::INT8;
const PointField_Datatype PointField::UINT8;
const PointField_Datatype PointField::INT16;
const PointField_Datatype PointField::UINT16;
const PointField_Datatype PointField::INT32;
const PointField_Datatype PointField::UINT32;
const PointField_Datatype PointField::FLOAT32;
const PointField_Datatype PointField::FLOAT64;
const PointField_Datatype PointField::Datatype_MIN;
const PointField_Datatype PointField::Datatype_MAX;
const int PointField::Datatype_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointField::kNameFieldNumber;
const int PointField::kOffsetFieldNumber;
const int PointField::kDatatypeFieldNumber;
const int PointField::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointField::PointField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ag.ros.PointField)
}

void PointField::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PointField::PointField(const PointField& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ag.ros.PointField)
}

void PointField::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0u;
  datatype_ = 0;
  count_ = 0u;
}

PointField::~PointField() {
  // @@protoc_insertion_point(destructor:ag.ros.PointField)
  SharedDtor();
}

void PointField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PointField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PointField::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PointField_descriptor_;
}

const PointField& PointField::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PointField_2eproto();
  return *default_instance_;
}

PointField* PointField::default_instance_ = NULL;

PointField* PointField::New(::google::protobuf::Arena* arena) const {
  PointField* n = new PointField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PointField::Clear() {
// @@protoc_insertion_point(message_clear_start:ag.ros.PointField)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PointField, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PointField*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, count_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PointField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ag.ros.PointField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ag.ros.PointField.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offset;
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (tag == 16) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_datatype;
        break;
      }

      // optional .ag.ros.PointField.Datatype datatype = 3;
      case 3: {
        if (tag == 24) {
         parse_datatype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datatype(static_cast< ::ag::ros::PointField_Datatype >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ag.ros.PointField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ag.ros.PointField)
  return false;
#undef DO_
}

void PointField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ag.ros.PointField)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ag.ros.PointField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional .ag.ros.PointField.Datatype datatype = 3;
  if (this->datatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->datatype(), output);
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:ag.ros.PointField)
}

::google::protobuf::uint8* PointField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ag.ros.PointField)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ag.ros.PointField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional .ag.ros.PointField.Datatype datatype = 3;
  if (this->datatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->datatype(), target);
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ag.ros.PointField)
  return target;
}

int PointField::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ag.ros.PointField)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // optional .ag.ros.PointField.Datatype datatype = 3;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datatype());
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PointField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ag.ros.PointField)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PointField* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PointField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ag.ros.PointField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ag.ros.PointField)
    MergeFrom(*source);
  }
}

void PointField::MergeFrom(const PointField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ag.ros.PointField)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.datatype() != 0) {
    set_datatype(from.datatype());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PointField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ag.ros.PointField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointField::CopyFrom(const PointField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ag.ros.PointField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointField::IsInitialized() const {

  return true;
}

void PointField::Swap(PointField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointField::InternalSwap(PointField* other) {
  name_.Swap(&other->name_);
  std::swap(offset_, other->offset_);
  std::swap(datatype_, other->datatype_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PointField::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PointField_descriptor_;
  metadata.reflection = PointField_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PointField

// optional string name = 1;
void PointField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PointField::name() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PointField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ag.ros.PointField.name)
}
 void PointField::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ag.ros.PointField.name)
}
 void PointField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ag.ros.PointField.name)
}
 ::std::string* PointField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ag.ros.PointField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PointField::release_name() {
  // @@protoc_insertion_point(field_release:ag.ros.PointField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PointField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ag.ros.PointField.name)
}

// optional uint32 offset = 2;
void PointField::clear_offset() {
  offset_ = 0u;
}
 ::google::protobuf::uint32 PointField::offset() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.offset)
  return offset_;
}
 void PointField::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointField.offset)
}

// optional .ag.ros.PointField.Datatype datatype = 3;
void PointField::clear_datatype() {
  datatype_ = 0;
}
 ::ag::ros::PointField_Datatype PointField::datatype() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.datatype)
  return static_cast< ::ag::ros::PointField_Datatype >(datatype_);
}
 void PointField::set_datatype(::ag::ros::PointField_Datatype value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointField.datatype)
}

// optional uint32 count = 4;
void PointField::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 PointField::count() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.count)
  return count_;
}
 void PointField::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointField.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ros
}  // namespace ag

// @@protoc_insertion_point(global_scope)
