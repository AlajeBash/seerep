// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PointField.proto

#ifndef PROTOBUF_PointField_2eproto__INCLUDED
#define PROTOBUF_PointField_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ag {
namespace ros {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PointField_2eproto();
void protobuf_AssignDesc_PointField_2eproto();
void protobuf_ShutdownFile_PointField_2eproto();

class PointField;

enum PointField_Datatype {
  PointField_Datatype_UNSET = 0,
  PointField_Datatype_INT8 = 1,
  PointField_Datatype_UINT8 = 2,
  PointField_Datatype_INT16 = 3,
  PointField_Datatype_UINT16 = 4,
  PointField_Datatype_INT32 = 5,
  PointField_Datatype_UINT32 = 6,
  PointField_Datatype_FLOAT32 = 7,
  PointField_Datatype_FLOAT64 = 8,
  PointField_Datatype_PointField_Datatype_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PointField_Datatype_PointField_Datatype_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PointField_Datatype_IsValid(int value);
const PointField_Datatype PointField_Datatype_Datatype_MIN = PointField_Datatype_UNSET;
const PointField_Datatype PointField_Datatype_Datatype_MAX = PointField_Datatype_FLOAT64;
const int PointField_Datatype_Datatype_ARRAYSIZE = PointField_Datatype_Datatype_MAX + 1;

const ::google::protobuf::EnumDescriptor* PointField_Datatype_descriptor();
inline const ::std::string& PointField_Datatype_Name(PointField_Datatype value) {
  return ::google::protobuf::internal::NameOfEnum(
    PointField_Datatype_descriptor(), value);
}
inline bool PointField_Datatype_Parse(
    const ::std::string& name, PointField_Datatype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PointField_Datatype>(
    PointField_Datatype_descriptor(), name, value);
}
// ===================================================================

class PointField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ag.ros.PointField) */ {
 public:
  PointField();
  virtual ~PointField();

  PointField(const PointField& from);

  inline PointField& operator=(const PointField& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointField& default_instance();

  void Swap(PointField* other);

  // implements Message ----------------------------------------------

  inline PointField* New() const { return New(NULL); }

  PointField* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointField& from);
  void MergeFrom(const PointField& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PointField_Datatype Datatype;
  static const Datatype UNSET =
    PointField_Datatype_UNSET;
  static const Datatype INT8 =
    PointField_Datatype_INT8;
  static const Datatype UINT8 =
    PointField_Datatype_UINT8;
  static const Datatype INT16 =
    PointField_Datatype_INT16;
  static const Datatype UINT16 =
    PointField_Datatype_UINT16;
  static const Datatype INT32 =
    PointField_Datatype_INT32;
  static const Datatype UINT32 =
    PointField_Datatype_UINT32;
  static const Datatype FLOAT32 =
    PointField_Datatype_FLOAT32;
  static const Datatype FLOAT64 =
    PointField_Datatype_FLOAT64;
  static inline bool Datatype_IsValid(int value) {
    return PointField_Datatype_IsValid(value);
  }
  static const Datatype Datatype_MIN =
    PointField_Datatype_Datatype_MIN;
  static const Datatype Datatype_MAX =
    PointField_Datatype_Datatype_MAX;
  static const int Datatype_ARRAYSIZE =
    PointField_Datatype_Datatype_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Datatype_descriptor() {
    return PointField_Datatype_descriptor();
  }
  static inline const ::std::string& Datatype_Name(Datatype value) {
    return PointField_Datatype_Name(value);
  }
  static inline bool Datatype_Parse(const ::std::string& name,
      Datatype* value) {
    return PointField_Datatype_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // optional .ag.ros.PointField.Datatype datatype = 3;
  void clear_datatype();
  static const int kDatatypeFieldNumber = 3;
  ::ag::ros::PointField_Datatype datatype() const;
  void set_datatype(::ag::ros::PointField_Datatype value);

  // optional uint32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ag.ros.PointField)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 offset_;
  int datatype_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PointField_2eproto();
  friend void protobuf_AssignDesc_PointField_2eproto();
  friend void protobuf_ShutdownFile_PointField_2eproto();

  void InitAsDefaultInstance();
  static PointField* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PointField

// optional string name = 1;
inline void PointField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PointField::name() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PointField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ag.ros.PointField.name)
}
inline void PointField::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ag.ros.PointField.name)
}
inline void PointField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ag.ros.PointField.name)
}
inline ::std::string* PointField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ag.ros.PointField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PointField::release_name() {
  // @@protoc_insertion_point(field_release:ag.ros.PointField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PointField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ag.ros.PointField.name)
}

// optional uint32 offset = 2;
inline void PointField::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 PointField::offset() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.offset)
  return offset_;
}
inline void PointField::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointField.offset)
}

// optional .ag.ros.PointField.Datatype datatype = 3;
inline void PointField::clear_datatype() {
  datatype_ = 0;
}
inline ::ag::ros::PointField_Datatype PointField::datatype() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.datatype)
  return static_cast< ::ag::ros::PointField_Datatype >(datatype_);
}
inline void PointField::set_datatype(::ag::ros::PointField_Datatype value) {
  
  datatype_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointField.datatype)
}

// optional uint32 count = 4;
inline void PointField::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 PointField::count() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointField.count)
  return count_;
}
inline void PointField::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointField.count)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ros
}  // namespace ag

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ag::ros::PointField_Datatype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ag::ros::PointField_Datatype>() {
  return ::ag::ros::PointField_Datatype_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PointField_2eproto__INCLUDED
