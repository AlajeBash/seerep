// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PointCloud2.proto

#ifndef PROTOBUF_PointCloud2_2eproto__INCLUDED
#define PROTOBUF_PointCloud2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "PointField.pb.h"
#include "Header.pb.h"
// @@protoc_insertion_point(includes)

namespace ag {
namespace ros {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PointCloud2_2eproto();
void protobuf_AssignDesc_PointCloud2_2eproto();
void protobuf_ShutdownFile_PointCloud2_2eproto();

class PointCloud2;

// ===================================================================

class PointCloud2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ag.ros.PointCloud2) */ {
 public:
  PointCloud2();
  virtual ~PointCloud2();

  PointCloud2(const PointCloud2& from);

  inline PointCloud2& operator=(const PointCloud2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointCloud2& default_instance();

  void Swap(PointCloud2* other);

  // implements Message ----------------------------------------------

  inline PointCloud2* New() const { return New(NULL); }

  PointCloud2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointCloud2& from);
  void MergeFrom(const PointCloud2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointCloud2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ag.ros.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::ag::ros::Header& header() const;
  ::ag::ros::Header* mutable_header();
  ::ag::ros::Header* release_header();
  void set_allocated_header(::ag::ros::Header* header);

  // optional uint32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // optional uint32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // repeated .ag.ros.PointField fields = 4;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 4;
  const ::ag::ros::PointField& fields(int index) const;
  ::ag::ros::PointField* mutable_fields(int index);
  ::ag::ros::PointField* add_fields();
  ::google::protobuf::RepeatedPtrField< ::ag::ros::PointField >*
      mutable_fields();
  const ::google::protobuf::RepeatedPtrField< ::ag::ros::PointField >&
      fields() const;

  // optional bool is_bigendian = 5;
  void clear_is_bigendian();
  static const int kIsBigendianFieldNumber = 5;
  bool is_bigendian() const;
  void set_is_bigendian(bool value);

  // optional uint32 point_step = 6;
  void clear_point_step();
  static const int kPointStepFieldNumber = 6;
  ::google::protobuf::uint32 point_step() const;
  void set_point_step(::google::protobuf::uint32 value);

  // optional uint32 row_step = 7;
  void clear_row_step();
  static const int kRowStepFieldNumber = 7;
  ::google::protobuf::uint32 row_step() const;
  void set_row_step(::google::protobuf::uint32 value);

  // optional bytes data = 8;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional bool is_dense = 9;
  void clear_is_dense();
  static const int kIsDenseFieldNumber = 9;
  bool is_dense() const;
  void set_is_dense(bool value);

  // @@protoc_insertion_point(class_scope:ag.ros.PointCloud2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::ag::ros::Header* header_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::RepeatedPtrField< ::ag::ros::PointField > fields_;
  ::google::protobuf::uint32 point_step_;
  ::google::protobuf::uint32 row_step_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  bool is_bigendian_;
  bool is_dense_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_PointCloud2_2eproto();
  friend void protobuf_AssignDesc_PointCloud2_2eproto();
  friend void protobuf_ShutdownFile_PointCloud2_2eproto();

  void InitAsDefaultInstance();
  static PointCloud2* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PointCloud2

// optional .ag.ros.Header header = 1;
inline bool PointCloud2::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
inline void PointCloud2::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::ag::ros::Header& PointCloud2::header() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::ag::ros::Header* PointCloud2::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::ag::ros::Header;
  }
  // @@protoc_insertion_point(field_mutable:ag.ros.PointCloud2.header)
  return header_;
}
inline ::ag::ros::Header* PointCloud2::release_header() {
  // @@protoc_insertion_point(field_release:ag.ros.PointCloud2.header)
  
  ::ag::ros::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void PointCloud2::set_allocated_header(::ag::ros::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ag.ros.PointCloud2.header)
}

// optional uint32 height = 2;
inline void PointCloud2::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 PointCloud2::height() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.height)
  return height_;
}
inline void PointCloud2::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.height)
}

// optional uint32 width = 3;
inline void PointCloud2::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 PointCloud2::width() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.width)
  return width_;
}
inline void PointCloud2::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.width)
}

// repeated .ag.ros.PointField fields = 4;
inline int PointCloud2::fields_size() const {
  return fields_.size();
}
inline void PointCloud2::clear_fields() {
  fields_.Clear();
}
inline const ::ag::ros::PointField& PointCloud2::fields(int index) const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.fields)
  return fields_.Get(index);
}
inline ::ag::ros::PointField* PointCloud2::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:ag.ros.PointCloud2.fields)
  return fields_.Mutable(index);
}
inline ::ag::ros::PointField* PointCloud2::add_fields() {
  // @@protoc_insertion_point(field_add:ag.ros.PointCloud2.fields)
  return fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ag::ros::PointField >*
PointCloud2::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:ag.ros.PointCloud2.fields)
  return &fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ag::ros::PointField >&
PointCloud2::fields() const {
  // @@protoc_insertion_point(field_list:ag.ros.PointCloud2.fields)
  return fields_;
}

// optional bool is_bigendian = 5;
inline void PointCloud2::clear_is_bigendian() {
  is_bigendian_ = false;
}
inline bool PointCloud2::is_bigendian() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.is_bigendian)
  return is_bigendian_;
}
inline void PointCloud2::set_is_bigendian(bool value) {
  
  is_bigendian_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.is_bigendian)
}

// optional uint32 point_step = 6;
inline void PointCloud2::clear_point_step() {
  point_step_ = 0u;
}
inline ::google::protobuf::uint32 PointCloud2::point_step() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.point_step)
  return point_step_;
}
inline void PointCloud2::set_point_step(::google::protobuf::uint32 value) {
  
  point_step_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.point_step)
}

// optional uint32 row_step = 7;
inline void PointCloud2::clear_row_step() {
  row_step_ = 0u;
}
inline ::google::protobuf::uint32 PointCloud2::row_step() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.row_step)
  return row_step_;
}
inline void PointCloud2::set_row_step(::google::protobuf::uint32 value) {
  
  row_step_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.row_step)
}

// optional bytes data = 8;
inline void PointCloud2::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PointCloud2::data() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PointCloud2::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.data)
}
inline void PointCloud2::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ag.ros.PointCloud2.data)
}
inline void PointCloud2::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ag.ros.PointCloud2.data)
}
inline ::std::string* PointCloud2::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ag.ros.PointCloud2.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PointCloud2::release_data() {
  // @@protoc_insertion_point(field_release:ag.ros.PointCloud2.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PointCloud2::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ag.ros.PointCloud2.data)
}

// optional bool is_dense = 9;
inline void PointCloud2::clear_is_dense() {
  is_dense_ = false;
}
inline bool PointCloud2::is_dense() const {
  // @@protoc_insertion_point(field_get:ag.ros.PointCloud2.is_dense)
  return is_dense_;
}
inline void PointCloud2::set_is_dense(bool value) {
  
  is_dense_ = value;
  // @@protoc_insertion_point(field_set:ag.ros.PointCloud2.is_dense)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ros
}  // namespace ag

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PointCloud2_2eproto__INCLUDED
