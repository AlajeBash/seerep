name: Build Docker from scratch unconditionally

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME_BASE: seerep_base
  IMAGE_NAME_SERVER: seerep_server

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-docker:
    runs-on: ubuntu-20.04
    permissions:
      packages: write

    steps:
      -
        name: Generate tags base
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME_BASE

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          # save to env for later steps
          echo "image_id_base=$IMAGE_ID" >> $GITHUB_ENV
          echo "version_base=$VERSION" >> $GITHUB_ENV
      -
        name: Generate tags server
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME_SERVER

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          # save to env for later steps
          echo "image_id_server=$IMAGE_ID" >> $GITHUB_ENV
          echo "version_server=$VERSION" >> $GITHUB_ENV
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push base image
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/base/Dockerfile
          tags: ${{ env.image_id_base }}:${{ env.version_base }}
          cache-from: type=registry,ref=${{ env.image_id_base }}:${{ env.version_base }}
          cache-to: type=inline
      -
        name: Build and push server image
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/server/Dockerfile
          tags: ${{ env.image_id_server }}:${{ env.version_server }}
          cache-from: type=registry,ref=${{ env.image_id_server }}:${{ env.version_server }}
          cache-to: type=inline
